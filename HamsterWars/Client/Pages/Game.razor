@page "/game"
@inject HttpClient Http
@using HamsterWars.Shared
@using Services
@using Egame = HamsterWars.Shared.Game

<h3>Game</h3>

@if (game is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div><h1>Wich one is cutest?</h1></div>
    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <div class="card bg-light">
                    <img class="card-img-top cardImg" src="/images/hamsters/@game.First.ImageName" alt="Card image">
                    <div class="card-body">
                        <h4 class="card-title text-center">@game.First.Name</h4>
                        <ul class="list-group">
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Age:<span class="badge bg-danger rounded-pill">@game.First.Age</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Favourite Food:<span class="badge bg-success rounded-pill">@game.First.FavouriteFood</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Loves:<span class="badge bg-warning rounded-pill">@game.First.Loves</span>
                            </li>
                        </ul>
                        <div>
                            <button @onclick="() => Vote(game.First.Id)">Vote</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                <img class="card-img" src="images/duel_swords.png" alt="vs">
            </div>

            <div class="col-md-4">
                <div class="card bg-light">
                    <img class="card-img-top cardImg" src="/images/hamsters/@game.Second.ImageName" alt="Card image">
                    <div class="card-body">
                        <h4 class="card-title text-center">@game.Second.Name</h4>
                        <ul class="list-group">
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Age:<span class="badge bg-danger rounded-pill">@game.Second.Age</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Favourite Food:<span class="badge bg-success rounded-pill">@game.Second.FavouriteFood</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Loves:<span class="badge bg-warning rounded-pill">@game.Second.Loves</span>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private GameService gameService;
    private Egame? game;
    protected override async Task OnInitializedAsync()
    {
        game = await Http.GetFromJsonAsync<Egame>("/api/Game/CreateGame");
    }

    private async Task Vote(int id)
    {
        gameService.Play(game.First.Id, game.Second.Id, id);


        //int winner = id;
        //int first = game.First.Id;
        //int second = game.Second.Id;

        //await Http.PutAsJsonAsync<Egame>(HttpMethod.Put, "api/Game/Play/{first}/{second}/{winner}", );

        await OnInitializedAsync();
    }
}
