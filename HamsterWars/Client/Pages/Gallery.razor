@page "/gallery"
@inject HttpClient Http
@inject IJSRuntime JSRuntime
@using HamsterWars.Shared
<link href="/css/styles/styles.css" rel="stylesheet" />

<div>
    <h3 class="head">Gallery</h3>
</div>
@if (hamsters is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="form-group">
            <input class="form-control"
                    @bind-value="searchTerm"
                    id="search"
                    placeholder="Search.."
                    @bind-value:event="oninput"/>
        </div>

        @foreach (var hamster in hamsters)
        {
            <div class="col-sm-4">
                <div class="container shadow-lg">
                    <div><h4>@hamster.Name</h4></div>
                    <img class="image" src="/images/hamsters/@hamster.ImageName" alt="Hamster image">
                    <div class="middle">
                        <ul class="list-group">
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Age:<span> @hamster.Age</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Favourite Food:<span> @hamster.FavouriteFood</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Loves:<span> @hamster.Loves</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Wins:<span class="badge bg-success rounded-pill"> @hamster.Wins</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Losses:<span class="badge bg-danger rounded-pill"> @hamster.Losses</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Games:<span class="badge bg-warning rounded-pill">@hamster.Games</span>
                            </li>
                        </ul>
                    </div>
                    <button class="oi oi-trash" @onclick="() => Delete(hamster.Id)"></button>
                </div>
            </div>
        }
    </div>
}

@code {
    private Hamster[]? hamsterList;
    private string? searchTerm { get; set; }

    private IEnumerable<Hamster> hamsters =>
        hamsterList.Where(h => string.IsNullOrEmpty(searchTerm) ||
                        h.Name.ToLower().Contains(searchTerm.ToLower()));

    protected override async Task OnInitializedAsync()
    {
        hamsterList = await Http.GetFromJsonAsync<Hamster[]>("/api/hamster/GetAll");
    }

    private async Task Delete(int id)
    {
        if (!await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this hamster?"))
            return;

        await Http.DeleteAsync($"api/Hamster/Delete{id}");
        await OnInitializedAsync();
    }
}
